#NoEnv
#KeyHistory 0
#Persistent
#SingleInstance off
#Include inc/Dlg.ahkh
#Include inc/HTTPRequest.ahkh


FileEncoding, CP936
If 1=/admin
{
	PopularFile=%A_WinDir%\System32\drivers\etc\hosts
	SystemHosts=%PopularFile%
	ModuleName=%2%
	Menu, Tray, NoStandard
    Menu, Tray, NoIcon
	if IsFunc("AdminModule" . ModuleName)
	{
		AdminModule%ModuleName%()
	}
	ExitApp
}

StatusLog := Object()

IfExist %A_ScriptFullPath%.dat\*
	ConfigFoundHere = true

IfExist %A_AppData%\orzTech\HostsX\*
	ConfigFoundAppData = true

ConfigHereWriteProtect=false

Random, rand1, 10000, 99999
Random, rand2, 10000, 99999
Random, rand3, 10000, 99999
Loop, %A_Temp%,2
{
	FullTemp = %A_LoopFileLongPath%
}
Loop, %A_ScriptDir%,2
{
	FullScriptDir = %A_LoopFileLongPath%
}
StringLower Lower_A_ScriptDir, FullScriptDir
StringLower Lower_A_Temp, FullTemp
StringLen Len_A_Temp, A_Temp
StringLeft Cutted_A_ScriptDir, Lower_A_ScriptDir, Len_A_Temp
If (Cutted_A_ScriptDir=Lower_A_Temp)
{
	ConfigHereWriteProtect=true
}
Else IfInString, Lower_A_ScriptDir, locals~1\temp
{
	ConfigHereWriteProtect=true
}

If ConfigHereWriteProtect=true
{ }
Else
{
	If ConfigFoundHere = true
		testFile = %A_ScriptFullPath%.dat\HostsX%rand1%%rand2%%rand3%.orz
	Else
		testFile = %A_ScriptDir%\HostsX%rand1%%rand2%%rand3%.orz
	FileAppend, a, %testFile%
	If ErrorLevel
		ConfigHereWriteProtect = true
	Else
		FileDelete %testFile%
}
ConfigUseAppData = false
ConfigPath=
If ConfigFoundHere=true
{
	if ConfigHereWriteProtect=true
	{
		if ConfigFoundAppData=true
		{ }
		else
		{
			FileCopyDir, %A_ScriptFullPath%.dat, %A_AppData%\orzTech\HostsX
		}
		ConfigPath = %A_AppData%\orzTech\HostsX
		ConfigUseAppData = true
	}
	else
	{
		ConfigPath = %A_ScriptFullPath%.dat
		ConfigUseAppData = false
	}
}
else
{
	if ConfigHereWriteProtect=true
	{
		if ConfigFoundAppData=true
		{}
		else
		{
			FileCreateDir, %A_AppData%\orzTech\HostsX
		}
		ConfigPath = %A_AppData%\orzTech\HostsX
		ConfigUseAppData = true
	}
	else
	{
		if ConfigFoundAppData=true
		{
			FileMoveDir, %A_AppData%\orzTech\HostsX, %A_ScriptFullPath%.dat
		}
		else
		{
			FileCreateDir, %A_ScriptFullPath%.dat
		}
		ConfigPath = %A_ScriptFullPath%.dat
		ConfigUseAppData = false
	}
}
If ConfigUseAppData = true
{
	TrayTip, HostsX 配置文件夹警告, HostsX 无法在当前所在文件夹写入数据，故已经切换到用户配置文件夹模式。请尝试将程序复制到本地硬盘可写入的文件夹运行，程序将自动将用户配置文件夹中创建的文件移动到当前文件夹。, 30, 3
    LogStatus("HostsX 无法在当前所在文件夹写入数据，故已经切换到用户配置文件夹模式。请尝试将程序复制到本地硬盘可写入的文件夹运行，程序将自动将用户配置文件夹中创建的文件移动到当前文件夹。")
}
	
IfNotExist,%ConfigPath%\HostsX.orzconfig
	GoSub FirstRun

applicationname=HostsX
applicationfunction=新一代记事本风格的 Hosts 文件编辑工具。
applicationtip=
applicationversion=0.8.0.0

LogStatus(applicationname " " applicationversion " 已经启动。")

Gosub ReloadSettings

BuildMenu:
If A_IsCompiled=1
	Menu, Tray, Icon, %A_ScriptFullPath%
Else
    Menu, Tray, Icon, HostsX.ico
   
Menu, Tray, NoStandard
Menu, Tray, Add, 关于 HostsX(&A), HelpAbout
Menu, Tray, Add
Menu, Tray, Add, 退出 HostsX(&X), FileExit

Menu, MyMenuBar,Add
Menu, MyMenuBar,DeleteAll

Menu, FileMenu, Add, 新建(&N)`tCtrl+N, FileNew
Menu, FileMenu, Add, 打开(&O)...`tCtrl+O, FileOpen
Menu, FileMenu, Add, 保存(&S)`tCtrl+S, FileSave
Menu, FileMenu, Add, 另存为(&A)..., FileSaveAs
Menu, FileMenu, Add  ; Separator line.
Gosub FillPopularFiles
Menu, FileMenu, Add  ; Separator line.
Menu, FileMenu, Add, 退出(&X), FileExit

Menu, EditMenu, Add, 撤销(&U)`tCtrl+Z, EditUndo
Menu, EditMenu, Add
Menu, EditMenu, Add, 剪切(&T)`tCtrl+X, EditCut
Menu, EditMenu, Add, 复制(&C)`tCtrl+C, EditCopy
Menu, EditMenu, Add, 粘贴(&P)`tCtrl+V, EditPaste
Menu, EditMenu, Add, 删除(&D)`tDelete` , EditDelete
Menu, EditMenu, Add, 删除全部(&E), EditDeleteAll
Menu, EditMenu, Add
Menu, EditMenu, Add, 查找(&F)...`tCtrl+F, EditFind
Menu, EditMenu, Add, 查找下一处(&N)`tF3, EditFindNext
Menu, EditMenu, Add, 查找上一处(&N)`tShift+F3, EditFindNext
Menu, EditMenu, Add, 替换(&R)...`tCtrl+H, EditReplace
Menu, EditMenu, Add, 转到(&G)...`tCtrl+G, EditGoto
Menu, EditMenu, Add
Menu, EditMenu, Add, 全选(&A)`tCtrl+A, EditSelectAll

Menu, FormatMenu, Add, 字体(&F)..., FormatFont
Menu, FormatMenu, Add
Menu, FormatMenu, Add, 纠正换行符号错误并删除空行(&R), HostsWrap
Menu, FormatMenu, Add
Menu, FormatMenu, Add, 注释(&M), HostsSortSelectedComment
Menu, FormatMenu, Add, 取消注释(&D), HostsSortSelectedUnComment
Menu, FormatMenu, Add, 删除注释(&D), HostsDelComments
Menu, FormatMenu, Add
Menu, FormatMenu, Add, 按照域名排序(&S), HostsSortSelected
Menu, FormatMenu, Add, 删除重复项并按照域名排序(&H), HostsSort
Menu, FormatMenu, Add, 按照域名分类(&C), HostsSortSelectedCategorized
Menu, FormatMenu, Add, 删除重复项并按照域名分类(&O), HostsSortCategorized
Menu, FormatMenu, Add
Menu, FormatMenu, Add, 屏蔽转向统一使用 0.0.0.0(&0), HostsReplace0000
Menu, FormatMenu, Add, 屏蔽转向统一使用 127.0.0.1(&1), HostsReplace127001
Menu, FormatMenu, Add, 屏蔽转向统一使用 127.1(&2), HostsReplace1271

GoSub BuildInsertMenu
GoSub BuildBackupMenu
Menu, ToolsMenu, Add, 刷新 DNS 缓存(&D)`tF7, ToolsCleanDNS
Menu, ToolsMenu, Add, 清除 Internet Explorer 缓存(&I)`tF8, ToolsCleanIE
Menu, ToolsMenu, Add, 清除 Windows Media Player 残余广告(&W), ToolsCleanWMP
Menu, ToolsMenu, Add
Menu, ToolsMenu, Add, 给 Hosts 文件加锁(&L)`tF5, ToolsLockHosts
Menu, ToolsMenu, Add, 给 Hosts 文件解锁(&U)`tF6, ToolsUnlockHosts
Menu, ToolsMenu, Add
Menu, ToolsMenu, Add, 执行 Ping 操作(&P)..., ToolsPing
Menu, ToolsMenu, Add, 执行 NSLookup 操作(&N)..., ToolsNSLookup

Menu, HelpMenu, Add, HostsX on GitHub(&P), orzTechPubPage
Menu, HelpMenu, Add
Menu, HelpMenu, Add, 关于 HostsX %applicationversion%(&A)..., HelpAbout

Menu, MyMenuBar, Add, 文件(&F), :FileMenu
Menu, MyMenuBar, Add, 编辑(&E), :EditMenu
Menu, MyMenuBar, Add, 格式(&O), :FormatMenu
Menu, MyMenuBar, Add, 插入(&I), :InsertMenu
Menu, MyMenuBar, Add, 工具(&T), :ToolsMenu
Menu, MyMenuBar, Add, 备份(&B), :BackupMenu
Menu, MyMenuBar, Add, 帮助(&H), :HelpMenu
Gui, 1:Menu, MyMenuBar

; Create the main Edit control and display the window:
Gui, +Resize  ; Make the window resizable.
Gui, Margin, 0, 0
SetGUIFont(1)
Gui, Add, StatusBar, vMainStatus gMainStatus
SB_SetText("", 2, 1)
SB_SetParts(100)
gui, font,, Fixedsys
gui, font,, Courier
gui, font,, Courier New
gui, font,, Simsun
gui, font,, Consolas
gui, font,, Simsun_Yahei
gui, font,, Monaco
gui, font,, VL Gothic
Gui Font, %Style% c%Color%, %Font%
Gui, Add, Edit, vMainEdit WantTab WantReturn WantCtrlA HSCROLL -Wrap W800 R30

OnMessage(0x0200, "UpdateStatusBar")
OnMessage(0x0201, "UpdateStatusBar")
OnMessage(0x0202, "UpdateStatusBar")
OnMessage(0x0203, "UpdateStatusBar")
OnMessage(0x0204, "UpdateStatusBar")
OnMessage(0x0205, "UpdateStatusBar")
OnMessage(0x0206, "UpdateStatusBar")
OnMessage(0x0207, "UpdateStatusBar")
OnMessage(0x0208, "UpdateStatusBar")
OnMessage(0x0209, "UpdateStatusBar")
OnMessage(0x020a, "UpdateStatusBar")
OnMessage(0x020b, "UpdateStatusBar")
OnMessage(0x020c, "UpdateStatusBar")
OnMessage(0x020d, "UpdateStatusBar")
OnMessage(0x020e, "UpdateStatusBar")
OnMessage(0x020f, "UpdateStatusBar")

OnMessage(0x0100, "UpdateStatusBar")
OnMessage(0x0101, "UpdateStatusBar")
OnMessage(0x0102, "UpdateStatusBar")
OnMessage(0x0103, "UpdateStatusBar")
OnMessage(0x0104, "UpdateStatusBar")
OnMessage(0x0105, "UpdateStatusBar")
OnMessage(0x0106, "UpdateStatusBar")
OnMessage(0x0107, "UpdateStatusBar")
OnMessage(0x0108, "UpdateStatusBar")
OnMessage(0x0109, "UpdateStatusBar")
OnMessage(0x010a, "UpdateStatusBar")
OnMessage(0x010b, "UpdateStatusBar")
OnMessage(0x010c, "UpdateStatusBar")
OnMessage(0x010d, "UpdateStatusBar")
OnMessage(0x010e, "UpdateStatusBar")
OnMessage(0x010f, "UpdateStatusBar")


Gui, Show,, HostsX %applicationversion%
Gui +LastFound
hGui := WinExist()
WinGet ControlID, ID
GroupAdd, hostsx, ahk_id %ControlID%
ControlGet, EditHandle, HWND,, Edit1, ahk_id %ControlID%
DllCall("SendMessage", UInt, EditHandle, UInt, 0x00CB, UInt, 1, "UInt *", 100)
CurrentFileName =  ; Indicate that there is no current file.
Unchanged=
IfExist,%SystemHosts%
{
	SelectedFileName =%SystemHosts%
	Gosub FileRead
}
Else
{
	Gui +OwnDialogs
	MsgBox, 35,,“%SystemHosts%”不存在，是否创建？
	IfMsgBox, Yes
	{
		FileAppend, ,%SystemHosts%
		SelectedFileName =%SystemHosts%
		Gosub FileRead
	}
}

LogStatus("就绪，单击此处可查看历史日志。")
return

#IfWinActive ahk_group hostsx
^N::
FileNew:
GoSub CheckSave
if ErrorLevel
	Return
GuiControl,, MainEdit  ; Clear the Edit control.
Unchanged=
CurrentFileName =
Gui +LastFound
WinSetTitle HostsX %applicationversion%
LogStatus("已创建新文件。")
return

^O::
FileOpen:
GoSub CheckSave
if ErrorLevel
	Return
Gui +OwnDialogs  ; Force the user to dismiss the FileSelectFile dialog before returning to the main window.
FileSelectFile, SelectedFileName, 3,, 打开 Hosts 文件
if SelectedFileName =  ; No file selected.
    return
Gosub FileRead
return

FileRead:
FileEncoding, 
FileRead, MainEdit, %SelectedFileName%  ; Read the file's contents into the variable.
FileEncoding, CP936
if ErrorLevel
{
	Gui +OwnDialogs
    MsgBox 无法打开“%SelectedFileName%”.
    return
}
GuiControl,, MainEdit, %MainEdit%  ; Put the text into the control.
GuiControlGet, MainEdit
Unchanged=%MainEdit%
CurrentFileName = %SelectedFileName%
Gui +LastFound
WinSetTitle HostsX %applicationversion% - %CurrentFileName%
LogStatus("已经打开文件 " CurrentFileName "。")
return

^S::
FileSave:
if CurrentFileName =   ; No filename selected yet, so do Save-As instead.
    Goto FileSaveAs
Gosub SaveCurrentFile
return

FileSaveAs:
Gui +OwnDialogs  ; Force the user to dismiss the FileSelectFile dialog before returning to the main window.
FileSelectFile, SelectedFileName, S16,, 保存 Hosts 文件
if SelectedFileName =  ; No file selected.
{
	ErrorLevel=1
    return
}
CurrentFileName = %SelectedFileName%
Gosub SaveCurrentFile
ErrorLevel=0
return

SaveCurrentFile:
GuiControlGet, MainEdit  ; Retrieve the contents of the Edit control.
EnvGet, Temp, Temp
Random, rand, 10000, 99999
FileEncoding, 
FileAppend, %MainEdit%, %temp%\HostsX%rand%.orz
FileEncoding, CP936

FileGetAttrib, Attributes, %CurrentFileName%
IfInString, Attributes, R
	FileSetAttrib, -R, %CurrentFileName%
IfInString, Attributes, H
	FileSetAttrib, -H, %CurrentFileName%
IfInString, Attributes, S
	FileSetAttrib, -S, %CurrentFileName%
FileCopy, %temp%\HostsX%rand%.orz, %CurrentFileName%, 1
If ErrorLevel
{
	FileDelete, %temp%\HostsX%rand%.orz
	Gui +OwnDialogs
	MsgBox 16,,保存“%CurrentFileName%”失败，请检查是否有权限写入文件！`n`n请尝试使用管理员权限运行本程序重试，或暂时另存为至其他位置。`n如果您曾经给 Hosts 文件加锁过，请先解锁。
	ErrorLevel=1
	Return
}
IfInString, Attributes, R
	FileSetAttrib, +R, %CurrentFileName%
IfInString, Attributes, H
	FileSetAttrib, +H, %CurrentFileName%
IfInString, Attributes, S
	FileSetAttrib, +S, %CurrentFileName%

FileDelete, %temp%\HostsX%rand%.orz
Gui +LastFound
WinSetTitle HostsX %applicationversion% - %CurrentFileName%
LogStatus(CurrentFileName " 保存成功。")
ErrorLevel=0
Unchanged=%MainEdit%
return


HelpAbout:
Gui,99:+owner1  ; Make the main window (Gui #1) the owner of the "about box" (Gui #2).
Gui +Disabled  ; Disable main window.
Gui,99:Destroy
Gui,99:Margin,15,15
SetGUIFont(99)
Gui,99:Font,Bold
Gui,99:Add,Text,xm y+20,%applicationname% %applicationversion%
Gui,99:Font
SetGUIFont(99)
Gui,99:Add,Text,x25 y+10,%applicationfunction%
Gui,99:Add,Text,x25 y+5,%applicationtip%

Gui,99:Font,Bold
Gui,99:Add,Text,xm y+20,by Yeechan Lu of 囧科技 | orzTech
Gui,99:Font
SetGUIFont(99)
Gui,99:Font,CBlue Underline
Gui,99:Add,Text,x25 y+5 gorzTechPubPage,https://github.com/orzTech/HostsXEditor
Gui,99:Font
SetGUIFont(99)
Gui,99:Show,,关于 %applicationname% %applicationversion%
hCurs:=DllCall("LoadCursor","UInt",NULL,"Int",32649,"UInt") ;IDC_HAND
 OnMessage(0x200,"WM_MOUSEMOVE")

Return

orzTechPubPage:
  Run, https://github.com/orzTech/HostsXEditor
Return

WM_MOUSEMOVE(wParam,lParam)
{
  Global hCurs
  MouseGetPos,,,,ctrl
  If ctrl in Static6,Static8,Static9
    DllCall("SetCursor","UInt",hCurs)
  Return
}
Return

99ButtonOK:  ; This section is used by the "about box" above.
99GuiClose:
99GuiEscape:
Gui, 1:-Disabled  ; Re-enable the main window (must be done prior to the next step).
Gui Destroy  ; Destroy the about box.
return


GuiDropFiles:
GoSub CheckSave
if ErrorLevel
	Return
Loop, parse, A_GuiEvent, `n
{
    SelectedFileName = %A_LoopField%  ; Get the first file only (in case there's more than one).
    break
}
Gosub FileRead
return

GuiSize:
if ErrorLevel = 1  ; The window has been minimized.  No action needed.
    return
; Otherwise, the window has been resized or maximized. Resize the Edit control to match.
GuiControlGet, MainStatus, Pos
NewWidth := A_GuiWidth
NewHeight := A_GuiHeight - MainStatusH
GuiControl, Move, MainEdit, W%NewWidth% H%NewHeight%
return

FileExit:
GuiClose:
GoSub CheckSave
if ErrorLevel
	Return
Gosub SaveSettings
ExitApp

CheckSave:
GuiControlGet, MainEdit
if Unchanged<>%MainEdit%
{
	Gui +OwnDialogs
	MsgBox,35, , “%SelectedFileName%”已修改，是否保存？
	IfMsgBox Yes
	{
		Gosub FileSave
		If ErrorLevel
		{
			ErrorLevel=1
			Return
		}
		Else
		{
			ErrorLevel=0
			return
		}
	}
	IfMsgBox No
	{
		ErrorLevel=0
		Return
	}
	ErrorLevel=1
	Return
}
Else
ErrorLevel=0
Return

FillPopularFiles:
PopularFiles=
DriveGet, drives, List
Loop, parse, drives,,
{
	PopularFile=%A_LoopField%:\Windows\HOSTS.SAM
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\Windows\System32\drivers\etc\hosts
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\Windows\Sysnative\drivers\etc\hosts
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\Windows\SysWOW64\drivers\etc\hosts
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\Windows\SysWOW64\drivers\128837
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\Windows\SysWOW64\drivers\138110
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\WinNT\System32\drivers\etc\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\WinNT\Sysnative\drivers\etc\hosts
	Gosub FillPopularFile
	
	PopularFile=%A_LoopField%:\WinNT\SysWOW64\drivers\etc\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\WinNT\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\Windows\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\system\data\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\private\10000882\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\hosts
	Gosub FillPopularFile

	PopularFile=%A_LoopField%:\dns\AcrylicHosts.txt
	Gosub FillPopularFile
}
PopularFile=%A_WinDir%\System32\drivers\etc\hosts
SystemHosts = %PopularFile%
Gosub FillPopularFile

PopularFile=%A_WinDir%\Sysnative\drivers\etc\hosts
Gosub FillPopularFile

PopularFile=%A_WinDir%\SysWOW64\drivers\etc\hosts
Gosub FillPopularFile


PopularFile=%A_ScriptDir%\hosts
Gosub FillPopularFile

RegRead, TcpipDatabasePath, HKLM, SYSTEM\CurrentControlSet\Services\Tcpip\Parameters, DataBasePath
if ErrorLevel
{
	TcpipDatabasePath = %A_WinDir%\System32\drivers\etc
}
else
{
	StringReplace, TcpipDatabasePath, TcpipDatabasePath, `%Systemroot`%, %A_WinDir%
	PopularFile=%TcpipDatabasePath%\hosts
	SystemHosts = %PopularFile%
	Gosub FillPopularFile
	
	Loop %TcpipDatabasePath%\hosts*  ; For each file dropped onto the script (or passed as a parameter).
	{
	    PopularFile = %A_LoopFileLongPath%
		Gosub FillPopularFile
	}
}

RegRead, AcrylicPath, HKLM, SYSTEM\CurrentControlSet\services\AcrylicController, ImagePath
if ErrorLevel
{}
else
{
	StringReplace PopularFile, AcrylicPath, AcrylicService.exe, AcrylicHosts.txt, All
	Gosub FillPopularFile
}

PopularFiles=%PopularFiles%`n%A_ScriptDir%\hosts.txt

Sort, PopularFiles, U
Loop, parse, PopularFiles, `n,
{
	if A_LoopField<>
		Menu, FileMenu, Add, %A_LoopField%, FileOpenPopular
}

Return

FillPopularFile:
IfExist, %PopularFile%
{
	Loop, %PopularFile%
	{
		PopularFile = %A_LoopFileLongPath%
	}
	PopularFiles=%PopularFiles%`n%PopularFile%
}
Return

FileOpenPopular:
GoSub CheckSave
if ErrorLevel
	Return
IfExist,%A_ThisMenuItem%
{
	SelectedFileName =%A_ThisMenuItem%
	Gosub FileRead
}
Else
{
	Gui +OwnDialogs
	MsgBox, 35,,“%A_ThisMenuItem%”不存在，是否创建？
	IfMsgBox, Yes
	{
		FileAppend, ,%A_ThisMenuItem%
		SelectedFileName =%A_ThisMenuItem%
		Goto FileRead
	}
	IfMsgBox, No
	{
		Return
	}
	Return
}
Return

HostsReplaceWith2000:
Hosts =
(
# Copyright (c) 1993-2006 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
#      102.54.94.97     rhino.acme.com          # source server
#       38.25.63.10     x.acme.com              # x client host

127.0.0.1       localhost
)
GuiControl,, MainEdit, %Hosts%
Return

HostsReplaceWithVista:
Hosts =
(
# Copyright (c) 1993-2006 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
#      102.54.94.97     rhino.acme.com          # source server
#       38.25.63.10     x.acme.com              # x client host

127.0.0.1       localhost
::1             localhost

)
GuiControl,, MainEdit, %Hosts%
Return

HostsReplaceWith7:
Hosts =
(
# Copyright (c) 1993-2009 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
#      102.54.94.97     rhino.acme.com          # source server
#       38.25.63.10     x.acme.com              # x client host

# localhost name resolution is handled within DNS itself.
#	127.0.0.1       localhost
#	::1             localhost
)
GuiControl,, MainEdit, %Hosts%
Return

HostsReplaceWithAcrylicHosts:
Hosts =
(
#############################################################################
#                                                                           #
# This is the AcrylicHosts.txt file.                                        #
#                                                                           #
# It contains predefined mappings between names and addresses exactly the   #
# same way the native HOSTS file does.                                      #
#                                                                           #
# Every line corresponds to a single record (mapping).                      #
# The format is: IPADDRESS HOSTNAME                                         #
#                                                                           #
# Where IPADDRESS is in quadded dot notation and HOSTNAME is a string.      #
# The separator between IPADDRESS and HOSTNAME can be any number of spaces  #
# or tabs or both. The HOSTNAME can also contain the special characters     #
# '*' and '?' in which case a (slow) "dir" like pattern matching algorithm  #
# is used instead of a (fast) binary search within the list of host names:  #
#                                                                           #
# 127.0.0.1 ad.*                                                            #
# 127.0.0.1 ads.*                                                           #
#                                                                           #
# Note: Patterns are evaluated in the same order in which they are written. #
#                                                                           #
# It is also possible to specify exceptions when pattern based matching is  #
# used. If for example we would like to filter out all ads.* like domains   #
# except for the ads.mydomain1 and the ads.mydomain2 we should write:       #
#                                                                           #
# 127.0.0.1 ads.* ads.mydomain1,ads.mydomain2                               #
#                                                                           #
# Multiple exceptions must be on a single line and separated by commas.     #
#                                                                           #
# Note: A line starting with the '#' character is considered a comment and  #
# therefore ignored.                                                        #
#                                                                           #
#############################################################################

127.0.0.1       localhost
)
GuiControl,, MainEdit, %Hosts%
Return

EditUndo:
GuiControl, Focus, MainEdit
Send ^Z
Return

EditCut:
GuiControl, Focus, MainEdit
Send ^X
Return

EditCopy:
GuiControl, Focus, MainEdit
Send ^C
Return

EditPaste:
GuiControl, Focus, MainEdit
Send ^V
Return

^G::
EditGoto:
ControlGet, MainEditCurrentLine, CurrentLine,, edit1
ControlGet, MainEditLineCount, LineCount,, edit1
Gui +OwnDialogs
InputBox, JumpToLine, 转到指定行, 行号(&L): 1 〜 %MainEditLineCount%, , , , , , , , %MainEditCurrentLine%
if (JumpToLine > 0 && JumpToLine <= MainEditLineCount)
{
    JumpToLine:= JumpToLine - 1

    SendMessage, 0x00BB, %JumpToLine%, 0, edit1
    if (ErrorLevel != 0xFFFFFFFF)
    {
        SendMessage, 0x00B1, %ErrorLevel%, %ErrorLevel%, edit1
        SendMessage, 0x00B7, 0, 0, edit1
    }
    /*
      result = SendMessageW(hwndEdit, EM_LINEINDEX, a1 - 1, 0);
      if ( result != -1 )
      {
        SendMessageW(hwndEdit, EM_SETSEL, result, result);
        result = SendMessageW(hwndEdit, EM_SCROLLCARET, 0, 0);
      }
      return result;
    */
}
Return

EditDelete:
GuiControl, Focus, MainEdit
Send {Del}
Return

EditDeleteAll:
GuiControlGet, MainEdit
MainEdit=
GuiControl,, MainEdit, %MainEdit%
Return

EditSelectAll:
GuiControl, Focus, MainEdit
Send ^A
Return

BuildInsertMenu:
Gui 1:Menu
Menu, InsertMenu, Add
Menu, InsertMenu, DeleteAll
Menu, InsertMenu, Add, 域名解析数据(&L), InsertLookupIPLocal
Menu, InsertMenu, Add, localhost 本地解析数据(&O), InsertLocalhost
Gui, 1:Menu, MyMenuBar
Return

BuildBackupMenu:
Gui 1:Menu
Menu, BackupMenu, Add,
Menu, BackupMenu, DeleteAll
Menu, BackupMenu, Add, 备份当前文件内容(&B), BackupHosts
Menu, BackupMenu, Add, 备份当前编辑区内容(&C), BackupEdit
Menu, BackupMenu, Add,
IfExist, %ConfigPath%\*.orzBackup
{
	Menu, RestoreWithBackups, Add
	Menu, RestoreWithBackups, DeleteAll
	Loop, %ConfigPath%\*.orzBackup, 0, 0
	{
		StringLen, A_LoopFileNameLength, A_LoopFileName
		A_LoopFileNameLength -= 10
		StringLeft, B_LoopFileName, A_LoopFileName, %A_LoopFileNameLength%
		Menu, RestoreWithBackups, Add, %B_LoopFileName%, RestoreWithBackupFile
	}
    Menu, BackupMenu, Add, 还原编辑区为备份的 Hosts 文件(&R), :RestoreWithBackups
}
Else
{
	Menu, BackupMenu, Add, 还原编辑区为备份的 Hosts 文件(&R), RestoreWithBackupFile
	Menu, BackupMenu, Disable, 还原编辑区为备份的 Hosts 文件(&R)
}
Menu, ReplaceWithDefaultContents, Add
Menu, ReplaceWithDefaultContents, DeleteAll
Menu, ReplaceWithDefaultContents, Add, Windows 98`, Me`, NT`, 2000`, &XP`, Server 2003, HostsReplaceWith2000
Menu, ReplaceWithDefaultContents, Add, Windows &Vista`, Server 2005, HostsReplaceWithVista
Menu, ReplaceWithDefaultContents, Add, Window&s 7`, Server 2008`, 8`, Server 2012, HostsReplaceWith7
Menu, ReplaceWithDefaultContents, Add, &Acrylic DNS Proxy, HostsReplaceWithAcrylicHosts
Menu, BackupMenu, Add, 还原编辑区为默认 Hosts 文件(&D), :ReplaceWithDefaultContents
Menu, BackupMenu, Add, 
Menu, BackupMenu, Add, 管理备份的 Hosts 文件(&M), ManageHostsBackups
Gui, 1:Menu, MyMenuBar
Return 

CreateBackup:
StringReplace, BackupName, BackupName, \, _, All
StringReplace, BackupName, BackupName, /, _, All
StringReplace, BackupName, BackupName, :, _, All
StringReplace, BackupName, BackupName, *, _, All
StringReplace, BackupName, BackupName, ?, _, All
StringReplace, BackupName, BackupName, `", _, All
StringReplace, BackupName, BackupName, ``, _, All
StringReplace, BackupName, BackupName, <, _, All
StringReplace, BackupName, BackupName, >, _, All
StringReplace, BackupName, BackupName, |, _, All
StringReplace, BackupName, BackupName, ., _, All
BackupFullPath = %ConfigPath%\%BackupName%.orzBackup
IfExist, %BackupFullPath%
{
	Gui +OwnDialogs
	MsgBox, 35,, %BackupName% 已经存在，是否覆盖？
	IfMsgBox No
		return
	else IfMsgBox Cancel
		return
}
FileAppend, %BackupContents%, %BackupFullPath%
Gui +OwnDialogs
If ErrorLevel
	Msgbox, 16, 无法写入文件 %BackupFullPath%，备份未能成功创建。
Else
	LogStatus("备份 " BackupName " 创建成功。")
Return

BackupHosts:
FileRead, BackupContents, %SelectedFileName%
FormatTime, TimeStamp, , yyMMdd_HHmm
BackupName = %TimeStamp%orig_%SelectedFileName%
StringReplace, BackupName, BackupName, \, _, All
StringReplace, BackupName, BackupName, /, _, All
StringReplace, BackupName, BackupName, :, _, All
StringReplace, BackupName, BackupName, *, _, All
StringReplace, BackupName, BackupName, ?, _, All
StringReplace, BackupName, BackupName, `", _, All
StringReplace, BackupName, BackupName, ``, _, All
StringReplace, BackupName, BackupName, <, _, All
StringReplace, BackupName, BackupName, >, _, All
StringReplace, BackupName, BackupName, |, _, All
StringReplace, BackupName, BackupName, ., _, All
Gui +OwnDialogs
InputBox, BackupName, , 请输入备份的文件名称。, , , , , , , , %BackupName%
if ErrorLevel
{
	;不备份。
}
else
{
	Gosub CreateBackup
	Gosub BuildBackupMenu
}
Return

BackupEdit:
GuiControlGet, MainEdit
BackupContents = %MainEdit%
FormatTime, TimeStamp, , yyMMdd_HHmm
BackupName = %TimeStamp%edit_%SelectedFileName%
StringReplace, BackupName, BackupName, \, _, All
StringReplace, BackupName, BackupName, /, _, All
StringReplace, BackupName, BackupName, :, _, All
StringReplace, BackupName, BackupName, *, _, All
StringReplace, BackupName, BackupName, ?, _, All
StringReplace, BackupName, BackupName, `", _, All
StringReplace, BackupName, BackupName, ``, _, All
StringReplace, BackupName, BackupName, <, _, All
StringReplace, BackupName, BackupName, >, _, All
StringReplace, BackupName, BackupName, |, _, All
StringReplace, BackupName, BackupName, ., _, All
Gui +OwnDialogs
InputBox, BackupName, , 请输入备份的文件名称。, , , , , , , , %BackupName%
if ErrorLevel
{
	;不备份。
}
else
{
	Gosub CreateBackup
	Gosub BuildBackupMenu
}
Return

RestoreWithBackupFile:
IfExist %ConfigPath%\%A_ThisMenuItem%.orzBackup
{
	FileRead, Hosts, %ConfigPath%\%A_ThisMenuItem%.orzBackup
	if not ErrorLevel  ; Successfully loaded.
	{
	    GuiControl,, MainEdit, %Hosts%
	    Hosts=
		LogStatus("已成功将备份 " A_ThisMenuItem " 还原至编辑区，若要使还原后的 Hosts 生效，请现在保存文件。")
	}
	else
	{
		Gui +OwnDialogs
		Msgbox, 16, 备份 %BackupFullPath% 无法读取，可能已经丢失或损坏。
	}
}
else
{
	Gui +OwnDialogs
	Msgbox, 16, 备份 %BackupFullPath% 无法读取，可能已经丢失或损坏。
}
Return

ManageHostsBackups:
Gui, 3:+owner1  ; Make the main window (Gui #1) the owner of the "about box" (Gui #2).
Gui +Disabled  ; Disable main window.
Gui, 3:Margin, 5, 5
SetGUIFont(3)
Gui, 3:Add, ListBox, vFileBox g3FileBox Sort Multi 0x100 R20 W500 section
Gui, 3:Add, Button, vButtonRename g3ButtonRename Disabled ys, 重命名(&R)
Gui, 3:Add, Button, vButtonDelete g3ButtonDelete Disabled wp, 删除(&D)
Gui, 3:Add, Button, vButtonExport g3ButtonExport Disabled wp, 导出(&E)
Gui, 3:Add, Button, vButtonImport g3ButtonImport wp, 导入(&I)
Gui, 3:Add, Button, vButtonSelectAll g3ButtonSelectAll wp y+10, 全选(&A)
Gui, 3:Add, Button, vButtonClose g3ButtonClose wp y+10 Default Cancel, 关闭(&C)
Gosub 3RebuildFileBox
Gui,3:Show,,管理备份的 Hosts 文件
return

3ButtonSelectAll:
Gui 3:+LastFound  ; Avoids the need to specify WinTitle below.
PostMessage, 0x185, 1, -1, ListBox1  ; Select all items. 0x185 is LB_SETSEL.
If FileBoxCount=0
	Gosub 3SetButtonStatusNone
Else
{
	If FileBoxCount = 1
		Gosub 3SetButtonStatusSingle
	Else
		Gosub 3SetButtonStatusMulti
}
Return

3FileBox:
GuiControlGet, FileBoxItem, 3:, FileBox
If FileBoxItem=
	Gosub 3SetButtonStatusNone
Else
{
	StringSplit, FileBoxItem, FileBoxItem, |
	If FileBoxItem0 = 1
		Gosub 3SetButtonStatusSingle
	Else
		Gosub 3SetButtonStatusMulti
}
return

3SetButtonStatusNone:
GuiControl, 3:Disable, ButtonRename
GuiControl, 3:Disable, ButtonDelete
GuiControl, 3:Disable, ButtonExport
Return

3SetButtonStatusSingle:
GuiControl, 3:Enable, ButtonRename
GuiControl, 3:Enable, ButtonDelete
GuiControl, 3:Enable, ButtonExport
Return

3SetButtonStatusMulti:
GuiControl, 3:Disable, ButtonRename
GuiControl, 3:Enable, ButtonDelete
GuiControl, 3:Enable, ButtonExport
Return

3ButtonRename:
GuiControlGet, FileBoxItem, 3:, FileBox
StringSplit, FileBoxItem, FileBoxItem, |
Loop, %FileBoxItem0%
{
    this_FileBoxItem := FileBoxItem%a_index%
    Gui +OwnDialogs
    InputBox, BackupName, , 将 %this_FileBoxItem% 重命名为：, , , , , , , , %this_FileBoxItem%
    if ErrorLevel
    {}
	else
	{
	   	StringReplace, BackupName, BackupName, \, _, All
		StringReplace, BackupName, BackupName, /, _, All
		StringReplace, BackupName, BackupName, :, _, All
		StringReplace, BackupName, BackupName, *, _, All
		StringReplace, BackupName, BackupName, ?, _, All
		StringReplace, BackupName, BackupName, `", _, All
		StringReplace, BackupName, BackupName, ``, _, All
		StringReplace, BackupName, BackupName, <, _, All
		StringReplace, BackupName, BackupName, >, _, All
		StringReplace, BackupName, BackupName, |, _, All
		StringReplace, BackupName, BackupName, ., _, All
		
		3ButtonRename_InnerStack:
		if BackupName=
		{
			Gui +OwnDialogs
			MsgBox 16,,请键入新文件名。
		}
		Else
		{
			ifExist %ConfigPath%\%BackupName%.orzBackup
			{
				Gui +OwnDialogs
				MsgBox 19,,“%BackupName%” 已存在，是否使用 “%BackupName%_2”？
				IfMsgBox Yes
				{
					BackupName = %BackupName%_2
					Goto 3ButtonRename_InnerStack
				}
			}
			Else
			{
				FileMove, %ConfigPath%\%this_FileBoxItem%.orzBackup, %ConfigPath%\%BackupName%.orzBackup
			}
		}
	}
}
Gosub 3RebuildFileBox
Return

3ButtonDelete:
GuiControlGet, FileBoxItem, 3:, FileBox
StringSplit, FileBoxItem, FileBoxItem, |
BackupDeletePrompt=
If FileBoxItem0 = 1
{
	BackupDeletePrompt=真的要删除“%FileBoxItem1%”吗？
}
Else
{
	BackupDeletePrompt=真的要删除“%FileBoxItem1%”等 %FileBoxItem0% 个备份吗？
}
Gui +OwnDialogs
Msgbox 291,,%BackupDeletePrompt%
IfMsgBox Yes
{
	Loop, %FileBoxItem0%
	{
	    this_FileBoxItem := FileBoxItem%a_index%
	    FileDelete, %ConfigPath%\%this_FileBoxItem%.orzBackup
	}
}
BackupDeletePrompt=
Gosub 3RebuildFileBox
Return

3ButtonExport:
GuiControlGet, FileBoxItem, 3:, FileBox
StringSplit, FileBoxItem, FileBoxItem, |
If FileBoxItem0 = 1
{
	Gui +OwnDialogs
	FileSelectFile, BackupExportFileName, S16, %FileBoxItem1%.orzBackup, 导出备份“%FileBoxItem1%”, HostsX 备份 (*.orzBackup)
	if BackupExportFileName=
	{
	}
	else
	{
		FileCopy, %ConfigPath%\%FileBoxItem1%.orzBackup, %BackupExportFileName%
	}
}
Else
{
	Gui +OwnDialogs
	FileSelectFolder, BackupExportFileName,,3, 导出 %FileBoxItem0% 个备份。
	BackupExportFileName := RegExReplace(BackupExportFileName, "\\$")
	if BackupExportFileName =
	{
	}
	else
	{
		Loop, %FileBoxItem0%
		{
		    this_FileBoxItem := FileBoxItem%a_index%
		    FileCopy, %ConfigPath%\%this_FileBoxItem%.orzBackup, %BackupExportFileName%\%this_FileBoxItem%.orzBackup
		}
	}
}
Gosub 3RebuildFileBox
Return

3ButtonImport:
Gui +OwnDialogs
FileSelectFile, BackupImportFileNames, M35, , 导入备份, HostsX 备份 (*.orzBackup)
if BackupImportFileNames =
{
}
else
{
	Gui +OwnDialogs
	Loop, parse, BackupImportFileNames, `n
	{
	    if a_index = 1
	    {
	        BackupImportFileBasedPath = %A_LoopField%
			BackupImportFileBasedPath := RegExReplace(BackupImportFileBasedPath, "\\$")
		}
	    else
	    {
	    	StringRight, B_LoopField, A_LoopField, 10
	    	StringLower, B_LoopField, B_LoopField, 10
	    	If B_LoopField = .orzbackup
	    		C_LoopField = %A_LoopField%
	    	Else
	    		C_LoopField = %A_LoopField%.orzBackup
	        FileCopy %BackupImportFileBasedPath%\%A_LoopField%, %ConfigPath%\%C_LoopField%
	    }
	}
}
Gosub 3RebuildFileBox
Return

3RebuildFileBox:
FileBoxList=
FileBoxCount=0
IfExist, %ConfigPath%\*.orzBackup
{
	Loop, %ConfigPath%\*.orzBackup, 0, 0
	{
		StringLen, A_LoopFileNameLength, A_LoopFileName
		A_LoopFileNameLength -= 10
		StringLeft, B_LoopFileName, A_LoopFileName, %A_LoopFileNameLength%
		FileBoxList = %FileBoxList%%B_LoopFileName%|
		FileBoxCount++
	}
}
GuiControl, 3:Disable, ButtonRename
GuiControl, 3:Disable, ButtonDelete
GuiControl, 3:Disable, ButtonExport
GuiControl, 3:,FileBox,|
GuiControl, 3:,FileBox,%FileBoxList%
Return

3ButtonClose:
3GuiClose:
3GuiEscape:
Gui, 1:-Disabled  ; Re-enable the main window (must be done prior to the next step).
Gui Destroy  ; Destroy the about box.
Gosub BuildBackupMenu
return


InsertOtherAction:
action=%A_ThisMenuItem%
Loop, %SourceIndex%
{
	action2:=source%A_Index%Caption
	if (action=action2)
	{
		myname:=source%A_Index%Caption
		myurl:=source%A_Index%URL
		myaction:=source%A_Index%Action
		if myaction=ShellExecute
		{
			Run, %myurl%
		}
		else if myaction = Insert
		{
			LogStatus("插入“" myname "”中, 正在下载“" myurl "”")
			Gui, 1:+Disabled
			EnvGet, Temp, Temp
			Random, rand, 10000, 99999
            HTTPRequestDownloadToFile("下载“" myname "”：", myurl, temp "\HostsX" rand ".orz")
			If (ErrorLevel == 0)
			{
				FileDelete, %temp%\HostsX%rand%.orz
				TrayTip,
				
				Gui, 1:-Disabled
				Gui +OwnDialogs
				MsgBox,16,,插入“%myname%”失败，无法连接“%myurl%”，请检查网络是否有问题并稍候重试。
				Return
			}
			FileRead, mycontent, %temp%\HostsX%rand%.orz
			FileDelete, %temp%\HostsX%rand%.orz
			LogStatus("插入“" myname "”完成。")
			mycontent := RegExReplace(mycontent, "\n\n", "`n")
			mycontent := RegExReplace(mycontent, "^\n", "")
			mycontent := RegExReplace(mycontent, "\n$", "")
			mycontent := mycontent
			SectionName=%myname%
			SectionContent=%mycontent%
			GuiControlGet, MainEdit
			Gosub AddOrReplaceSection
			GuiControl,, MainEdit, %MainEdit%
			Gui, 1:-Disabled
			GuiControl, Focus, MainEdit
			Send ^{END}
		}
	}
}
Return

InsertMenuAction:
action=%A_ThisMenu%/%A_ThisMenuItem%
StringMid action, action, 16
Loop, %ArrayCount%
{
	action2:=ArrayName%A_Index%
	if (action=action2)
	{
		myname:=ArrayFullName%A_Index%
		mycontent:=ArrayContent%A_Index%
	}
}
mycontent := RegExReplace(mycontent, "\n\n", "`n")
mycontent := RegExReplace(mycontent, "^\n", "")
mycontent := RegExReplace(mycontent, "\n$", "")
mycontent := mycontent
SectionName=%myname%
SectionContent=%mycontent%
GuiControlGet, MainEdit
Gosub AddOrReplaceSection
GuiControl,, MainEdit, %MainEdit%
GuiControl, Focus, MainEdit
Send ^{END}
Return

AddOrReplaceSection:
SectionBeginLine=#B#HostsX: %SectionName%
SectionEndLine=#E#HostsX: %SectionName%
SectionBegin:=RegExMatch(MainEdit, "im)(*ANYCRLF)^" . SectionBeginLine . "$")
SectionEnd:=RegExMatch(MainEdit, "im)(*ANYCRLF)^" . SectionEndLine . "$")
SpecialHosts:=RegExMatch(SectionContent, "m)\$FUNCTION:([A-Za-z0-9]*)", SpecialHostsPart)
If SpecialHosts
{
	If (SpecialHosts != 0)
	{
		if IsFunc("SpecialHosts" . SpecialHostsPart1)
		{
			SectionContent := SpecialHosts%SpecialHostsPart1%()
		}
	}
}
If (SectionBegin = 0 and SectionEnd = 0)
{
	if InsertHostsItemsNoAdd<>true
		Gosub AddSection
}
Else
{
Gosub ReplaceSection
}
Return

AddSection:
MainEdit=%MainEdit%`n%SectionBeginLine%`n%SectionContent%`n%SectionEndLine%`n
Return

ReplaceSection:
MainEditBefore:=SubStr(MainEdit, 1, SectionBegin - 1)
MainEditAfter:=SubStr(MainEdit, SectionEnd + StrLen(SectionEndLine))
MainEditNew=%SectionBeginLine%`n%SectionContent%`n%SectionEndLine%
MainEdit=%MainEditBefore%%MainEditNew%%MainEditAfter%
Return

UrlDownloadToVar(URL, Proxy="", ProxyBypass="") {
	AutoTrim, Off
	hModule := DllCall("LoadLibrary", "str", "wininet.dll")

	AccessType = 0
	;INTERNET_OPEN_TYPE_PRECONFIG                    0   // use registry configuration
	;INTERNET_OPEN_TYPE_DIRECT                       1   // direct to net
	;INTERNET_OPEN_TYPE_PROXY                        3   // via named proxy
	;INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY  4   // prevent using java/script/INS

	io_hInternet := DllCall("wininet\InternetOpenA"
	, "str", "" ;lpszAgent
	, "uint", AccessType
	, "str", Proxy
	, "str", ProxyBypass
	, "uint", 0) ;dwFlags

	iou := DllCall("wininet\InternetOpenUrlA"
	, "uint", io_hInternet
	, "str", url
	, "str", "" ;lpszHeaders
	, "uint", 0 ;dwHeadersLength
	, "uint", 0x80000000 ;dwFlags: INTERNET_FLAG_RELOAD = 0x80000000 // retrieve the original item
	, "uint", 0) ;dwContext

	If (ErrorLevel != 0 or iou = 0) {
	DllCall("FreeLibrary", "uint", hModule)
	return 0
	}

	VarSetCapacity(buffer, 512, 0)
	VarSetCapacity(NumberOfBytesRead, 4, 0)
	Loop
	{
	  irf := DllCall("wininet\InternetReadFile", "uint", iou, "uint", &buffer, "uint", 512, "uint", &NumberOfBytesRead)
	  NOBR = 0
	  Loop 4  ; Build the integer by adding up its bytes. - ExtractInteger
		NOBR += *(&NumberOfBytesRead + A_Index-1) << 8*(A_Index-1)
	  IfEqual, NOBR, 0, break
	  ;BytesReadTotal += NOBR
	  DllCall("lstrcpy", "str", buffer, "uint", &buffer)
	  res = %res%%buffer%
	}
	StringTrimRight, res, res, 1

	DllCall("wininet\InternetCloseHandle",  "uint", iou)
	DllCall("wininet\InternetCloseHandle",  "uint", io_hInternet)
	DllCall("FreeLibrary", "uint", hModule)
	AutoTrim, on
	return, res
}

HostsDelComments:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
Clipboard2=%Clipboard%
StringReplace, Clipboard2, Clipboard2, `r, `n, All
StringReplace, Clipboard2, Clipboard2, `n, `n, All
Clipboard2:=RegExReplace(Clipboard2, "^`n", "")
Clipboard2:=RegExReplace(Clipboard2, "`n$", "")
Clipboard2:=RegExReplace(Clipboard2, "`n+", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)^[^0-9a-f.:].*$", "")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)#.*$", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF);.*$", "`n")
StringReplace, Clipboard2, Clipboard2, `n, `r`n, All
Clipboard=%Clipboard2%
GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
Return

HostsSortSelectedUnComment:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send {END}+{HOME}^C
Clipboard2=%Clipboard%
StringReplace, Clipboard2, Clipboard2, `r, `n, All
StringReplace, Clipboard2, Clipboard2, `n, `n, All
Clipboard2:=RegExReplace(Clipboard2, "^`n", "")
Clipboard2:=RegExReplace(Clipboard2, "`n$", "")
Clipboard2:=RegExReplace(Clipboard2, "`n+", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)#(.*)$", "$1")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF);(.*)$", "$1")
StringReplace, Clipboard2, Clipboard2, `n, `r`n, All
Clipboard=%Clipboard2%
GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
Return

HostsSortSelectedComment:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send {END}+{HOME}^C
Clipboard2=%Clipboard%
Clipboard2:=RegExReplace(Clipboard2, "im)^", "#")
Clipboard=%Clipboard2%

GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
Return

HostsSort:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
Gui +Disabled
LogStatus("正在排序……")
Clipboard2=%Clipboard%
StringReplace, Clipboard2, Clipboard2, `r, `n, All
StringReplace, Clipboard2, Clipboard2, `n, `n, All
Clipboard2:=RegExReplace(Clipboard2, "`n+", "`n")
Clipboard2:=RegExReplace(Clipboard2, "^`n", "")
Clipboard2:=RegExReplace(Clipboard2, "`n$", "")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)^[^0-9a-f.:].*$", "")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)#.*$", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF);.*$", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)\s*$", "`n")
Clipboard2:=RegExReplace(Clipboard2, "im)(*ANYCRLF)^\s*", "`n")
Clipboard2:=RegExReplace(Clipboard2, "[ 	]+", "`t")
StringReplace, Clipboard2, Clipboard2, `n, `r`n, All
Sort, Clipboard2, F HostsSort U
Clipboard=%Clipboard2%
Tooltip
Gui -Disabled
GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
LogStatus("排序完成。")
Return
HostsSort(a1, a2)
{
	if (a1=a2)
		return 0
	b1:=RegExReplace(a1, "^(.*)`t(.*)$", "$2")
	b2:=RegExReplace(a2, "^(.*)`t(.*)$", "$2")
	
	return b1 > b2 ? 1 : b1 < b2 ? -1 : 0
}

HostsSortSelected:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
Gui +Disabled
LogStatus("正在排序。")
Sort, Clipboard, F HostsSort U
Tooltip
Gui -Disabled
GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
LogStatus("排序玩了。")
Return

HostsSortCategorized:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
Gui +Disabled
LogStatus("正在排序。")
Sort, Clipboard, F HostsSortCategorized U
Tooltip
Gui -Disabled
GuiControl, Focus, MainEdit
Send ^V
Clipboard := ClipSaved
LogStatus("排序玩了。")
Return

HostsSortSelectedCategorized:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
Gui +Disabled
LogStatus("正在排序。")
Sort, Clipboard, F HostsSortCategorized U
Tooltip
GuiControl, Focus, MainEdit
Send ^V
Gui -Disabled
Clipboard := ClipSaved
LogStatus("排序玩了。")
Return

HostsSortCategorized(a1, a2)
{
	if (a1=a2)
		return 0
	b1:=ReverseHostName(RegExReplace(a1, "^(.*)`t(.*)$", "$2"))
	b2:=ReverseHostName(RegExReplace(a2, "^(.*)`t(.*)$", "$2"))
	
	return b1 > b2 ? 1 : b1 < b2 ? -1 : 0
}


ReverseHostName(hostName)
{
	Sort hostName, D. R
	Return hostName
}

HostsReplace0000:
GuiControlGet, MainEdit
StringReplace MainEdit, MainEdit, 127.0.0.1, 0.0.0.0, All
StringReplace MainEdit, MainEdit, 127.1, 0.0.0.0, All
GuiControl,, MainEdit, %MainEdit%
Return

HostsReplace1271:
GuiControlGet, MainEdit
StringReplace MainEdit, MainEdit, 0.0.0.0, 127.1, All
StringReplace MainEdit, MainEdit, 127.0.0.1, 127.1, All
GuiControl,, MainEdit, %MainEdit%
Return

HostsReplace127001:
GuiControlGet, MainEdit
StringReplace MainEdit, MainEdit, 0.0.0.0, 127.0.0.1, All
StringReplace MainEdit, MainEdit, 127.1, 127.0.0.1, All
GuiControl,, MainEdit, %MainEdit%
Return

InsertHostsItemsAction:
StringMid, InsertHostsItems, A_ThisMenu, 16
Gosub InsertHostsItems
Return

InsertHostsItems:
Gui +Disabled
GuiControlGet, MainEdit
Loop, %ArrayCount%
{
	action2:=ArrayFullName%A_Index%
	inserthostsfound:=InStr(action2, InsertHostsItems, false, 1)
	if inserthostsfound >=1
	{
		myname:=ArrayFullName%A_Index%
		mycontent:=ArrayContent%A_Index%
		mycontent := RegExReplace(mycontent, "`n`n", "`n")
		mycontent := RegExReplace(mycontent, "^`n", "")
		mycontent := RegExReplace(mycontent, "`n$", "")
		mycontent := mycontent
		SectionName=%myname%
		SectionContent=%mycontent%
		Gosub AddOrReplaceSection
	}
}
GuiControl,, MainEdit, %MainEdit%
Gui -Disabled
GuiControl, Focus, MainEdit
Tooltip
Send ^{END}
InsertHostsItemsNoAdd=
Return

HostsWrap:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll
Clipboard=
Send ^C
If Clipboard=
	Send ^A^C
StringReplace Clipboard, Clipboard, `r, `n`n, All
StringReplace Clipboard, Clipboard, `n, `n`n, All
Clipboard:=RegExReplace(Clipboard, "`n+", "`n")
StringReplace, Clipboard, Clipboard, `n, `r`n, All
Send ^V
Clipboard := ClipSaved
Return


^F::
EditFind:
if Found<>true
{
	WinGet ControlID, ID
	Dlg_Find(hGui, "OnFindReplace", "-d-w-c")
	hFind:=WinActive("A")
	Found=true
}
Else
{
	WinActivate ahk_id %hFind%
}
Return

^H::
EditReplace:
if Found<>true
{
	WinGet ControlID, ID
	Dlg_Replace(hGui, "OnFindReplace", "-d-w-c")
	hFind:=WinActive("A")
	Found=true
}
Else
{
	WinActivate ahk_id %hFind%
}
Return

OnFindReplace(Event, Flags, FindText, ReplaceText){
	if Event contains C
	{
		global Found=false
		return
	}
	if Event contains F
	{
		global find:=FindText
		global replace:=
		Gosub EditFindNext
	}
	if Event contains R
	{
		global find:=FindText
		global replace:=ReplaceText
		Gosub EditFindNext
	}
	if Event contains A
	{
		global find:=FindText
		global replace:=ReplaceText
		GuiControlGet, MainEdit
		StringReplace MainEdit,MainEdit,%FindText%,%ReplaceText%,UseErrorLevel
		hitcount=%Errorlevel%
        LogStatus("替换完成，共替换 " hitcount " 处。")
		GuiControl,, MainEdit, %MainEdit%
	}
}



EditFindPrev:
if find=
	Return
if (find != lastFind) {
	offset = 0
	hits = 0
	addToPos=0
}
GuiControl 1:Focus, MainEdit                           ; focus on main help window to show selection
;SendMessage 0xB6, 0, -999, Edit1, ahk_id %ControlID%  ; Scroll to top
GuiControlGet, MainEdit
StringGetPos pos, MainEdit, %find% ,R,% StrLen(MainEdit)-offset+addToPos+StrLen(find)           ; find the position of the search string
tooltip, % StrLen(MainEdit)-offset+StrLen(find)
if ErrorLevel {
  LogStatus("无法再次找到“" find "”。")
  offset = 0
  hits = 0
	return
}
StringLeft __s, MainEdit, %pos%                        ; cut off end to count lines
StringReplace __s,__s,`n,`n,UseErrorLevel             ; Errorlevel <- line number
addToPos=%Errorlevel%
SendMessage 0xB6, 0, ErrorLevel, Edit1, ahk_id %ControlID% ; Scroll to visible
SendMessage 0xB1, pos + addToPos, pos + addToPos + Strlen(find), Edit1, ahk_id %ControlID% ; Select search text
if replace
{
	if Found=true
	{
		ClipSaved := ClipboardAll   ; Save the entire clipboard to a variable of your choice.
		Clipboard=%replace%
		Send ^V
		SendMessage 0xB1, pos + addToPos, pos + addToPos + Strlen(replace), Edit1, ahk_id %ControlID% ; Select search text
		Clipboard := ClipSaved   ; Restore the original clipboard. Note the use of Clipboard (not ClipboardAll).
	}
}
; http://msdn.microsoft.com/en-us/library/bb761637(VS.85).aspx
; Scroll the caret into view in an edit control:
SendMessage, EM_SCROLLCARET := 0xB7, 0, 0, Edit1, ahk_id %ControlID%
offset := pos + addToPos + Strlen(find)
lastFind = %find%
hits--
myhits:=addToPos - 1
StringReplace MainEdit,MainEdit,%find%,%find%,UseErrorLevel
hitcount=%Errorlevel%
LogStatus(hits "/" hitcount "：在第 " myhits " 行找到“" find "”。")
Return

+F3::
GoSub EditFindPrev
Return


F3::
GoSub EditFindNext
Return


EditFindNext:
if find=
	Return
if (find != lastFind) {
	offset = 0
	hits = 0
	addToPos=0
}
GuiControl 1:Focus, MainEdit                           ; focus on main help window to show selection
;SendMessage 0xB6, 0, -999, Edit1, ahk_id %ControlID%  ; Scroll to top
GuiControlGet, MainEdit
StringGetPos pos, MainEdit, %find% ,,offset-addToPos            ; find the position of the search string
if (pos = -1) {
	if (offset = 0) {
	  LogStatus("找不到“" find "”。")
	}
	else {
	  LogStatus("无法再次找到“" find "”。")
	  offset = 0
	  hits = 0
	}
	return
}
StringLeft __s, MainEdit, %pos%                        ; cut off end to count lines
StringReplace __s,__s,`n,`n,UseErrorLevel             ; Errorlevel <- line number
addToPos=%Errorlevel%
SendMessage 0xB6, 0, ErrorLevel, Edit1, ahk_id %ControlID% ; Scroll to visible
SendMessage 0xB1, pos + addToPos, pos + addToPos + Strlen(find), Edit1, ahk_id %ControlID% ; Select search text
if replace
{
	if Found=true
	{
		ClipSaved := ClipboardAll   ; Save the entire clipboard to a variable of your choice.
		Clipboard=%replace%
		Send ^V
		SendMessage 0xB1, pos + addToPos, pos + addToPos + Strlen(replace), Edit1, ahk_id %ControlID% ; Select search text
		Clipboard := ClipSaved   ; Restore the original clipboard. Note the use of Clipboard (not ClipboardAll).
	}
}
; http://msdn.microsoft.com/en-us/library/bb761637(VS.85).aspx
; Scroll the caret into view in an edit control:
SendMessage, EM_SCROLLCARET := 0xB7, 0, 0, Edit1, ahk_id %ControlID%
offset := pos + addToPos + Strlen(find)
lastFind = %find%
hits++
myhits:=addToPos + 1
StringReplace MainEdit,MainEdit,%find%,%find%,UseErrorLevel
hitcount=%Errorlevel%
LogStatus(hits "/" hitcount "：在第 " myhits " 行找到“" find "”。")
Return

RemoveToolTip:
SetTimer, RemoveToolTip, Off
ToolTip
return

ToolsCleanWMP:
ToolTip 正在清除 Windows Media Player 残余广告. . .
RegDelete, HKCU, Software\Microsoft\MediaPlayer\Services\FaroLatino_CN
RegDelete, HKCU, Software\Microsoft\MediaPlayer\Subscriptions
RegDelete, HKLM, SOFTWARE\Microsoft\MediaPlayer\services\FaroLatino_CN
ToolTip
LogStatus("清除 Windows Media Player 残余广告成功！")
Return

F7::
ToolsCleanDNS:
ToolTip 正在清理 DNS 缓存. . .
RunWait, ipconfig.exe /flushdns, , Hide
ToolTip
LogStatus("清理 DNS 缓存成功！")
Return

F8::
ToolsCleanIE:
ToolTip 正在清理 Internet Explorer 缓存. . .
EnvGet, UserProfile, UserProfile
FileRemoveDir, %userprofile%\local Settings\Temporary Internet Files\, true
If ErrorLevel
{
	Gui +OwnDialogs
	MsgBox, 16,,清理失败。当前用户可能没有权限，请使用管理员模式运行！
	Return
}
FileCreateDir %userprofile%\local Settings\Temporary Internet Files\
ToolTip
LogStatus("清理 Internet Explorer 缓存成功！")
Return

F5::
ToolsLockHosts:
	RunAdminModule("LockHosts")
Return

F6::
ToolsUnlockHosts:
	RunAdminModule("UnlockHosts")
Return

RequestAdmin(Args)
{
	if not A_IsAdmin
	{
		If A_IsCompiled=0
			DllCall("shell32\ShellExecuteW", uint, 0, str, "RunAs", str, A_AhkPath , str, """" . A_ScriptFullPath . """" . Args, str, A_WorkingDir, int, 1)
		Else
			DllCall("shell32\ShellExecuteW", uint, 0, str, "RunAs", str, A_ScriptFullPath , str, Args, str, A_WorkingDir, int, 1)
	}
	else
	{
		If A_IsCompiled=0
			DllCall("shell32\ShellExecuteW", uint, 0, str, "open", str, A_AhkPath , str, """" . A_ScriptFullPath . """" . Args, str, A_WorkingDir, int, 1)
		Else
			DllCall("shell32\ShellExecuteW", uint, 0, str, "open", str, A_ScriptFullPath , str, Args, str, A_WorkingDir, int, 1)
	}
}

RunAdminModule(Args)
{
	RequestAdmin("/admin " . Args)
}

AdminModuleLockHosts()
{
	global
	RunWait, %comspec% /c "echo y|cacls %SystemHosts% /g everyone:r",, Hide
	FileSetAttrib +ASRH,%SystemHosts%
	MsgBox, 64, , Hosts 文件加锁成功。
}

AdminModuleUnlockHosts()
{
	global
	RunWait, %comspec% /c "takeown /f %SystemHosts%",, Hide
	RunWait, %comspec% /c "echo y|cacls %SystemHosts% /g everyone:f >nul",, Hide
	FileSetAttrib -ASRH, %SystemHosts%
	MsgBox, 64, , Hosts 文件解锁成功。
}

FormatFont:
Gui +Disabled  ; Force the user to dismiss the FileSelectFile dialog before returning to the main window.
Dlg_Font( font := Font, style := Style, color:=Color)
Gui -Disabled
GuiControl, Focus, MainEdit
Gui Font, %Style% c%Color%, %Font%
GuiControl, Font, MainEdit
Return

ToolsPing:
Gui +OwnDialogs
InputBox, Ping , Ping 操作, 请输入要 Ping 的主机名或 IP。
If Ping<>
	Run, %comspec% /c "title HostsX - Ping&%A_WinDir%\System32\ping.exe %Ping% & pause"
Return


ToolsNSLookup:
Gui +OwnDialogs
InputBox, NSLookup , NSLookup 操作, 请输入要 NSLookup 的主机名。
Gui +Disabled
ToolTip, NsLookuping..,
If NSLookup<>
{
	EnvGet, Temp, Temp
	Random, rand, 10000, 99999
	RunWait, %comspec% /c "echo exit|%A_WinDir%\System32\nslookup.exe -type=all %NSLookup%>`"%temp%\HostsX%rand%.orz`"",,	Hide
	IfExist %temp%\HostsX%rand%.orz
	{
		FileRead, NSLookup, %temp%\HostsX%rand%.orz
		InsertContent:=RegExReplace(NSLookup, "im)(*ANYCRLF)^", "# ")
		Gosub InsertContent
		FileDelete, %temp%\HostsX%rand%.orz
	}
}
Gui -Disabled
ToolTip,
Return

ReloadSettings:
setting=%ConfigPath%\HostsX.orzconfig
IfNotExist, %setting%
{
	FileAppend,[orzTech/HostsX], %setting%
}
IniRead, Font, %setting%, orzTech/HostsX, Font
IniRead, Style, %setting%, orzTech/HostsX, FontStyle
IniRead, Color, %setting%, orzTech/HostsX, FontColor
IniRead, FeedbackName, %setting%, orzTech/HostsX, FeedbackName
IniRead, FeedbackEmail, %setting%, orzTech/HostsX, FeedbackEmail
If Font=ERROR
	Font=
If FontStyle=ERROR
	FontStyle=s12
If FontColor=ERROR
	FontColor=0x000000
If FeedbackEmail=ERROR
    FeedbackEmail=
If FeedbackName=ERROR
    FeedbackName=
Return

SaveSettings:
IniWrite, %Font%, %setting%, orzTech/HostsX, Font
IniWrite, %Style%, %setting%, orzTech/HostsX, FontStyle
IniWrite, %Color%, %setting%, orzTech/HostsX, FontColor
IniWrite, %FeedbackName%, %setting%, orzTech/HostsX, FeedbackName
IniWrite, %FeedbackEmail%, %setting%, orzTech/HostsX, FeedbackEmail
Return

InsertContent:
GuiControl, Focus, MainEdit
ClipSaved := ClipboardAll   ; Save the entire clipboard to a variable of your choice.
Clipboard=%InsertContent%
Send ^V
Clipboard := ClipSaved   ; Restore the original clipboard. Note the use of Clipboard (not ClipboardAll).

Return

InsertLookupIPLocal:
Gui +OwnDialogs
InputBox, HostNames , 在本地解析主机名并插入, 请输入要解析的主机名。`n`n提示：您可以使用逗号分隔多个主机名。
LogStatus("正在解析 " HostNames)
InsertContent=
Loop, parse, HostNames, `,
{
	LogStatus("正在连接 DNS 服务器：" A_LoopField)
	IP:=Host2IP(A_LoopField)
	If ErrorLevel
	{
		IP:=GetErrorHost2IP(IP)
		InsertContent=%InsertContent%#HostsX: 解析“%A_LoopField%”出现错误：%IP%`r`n
	}
	Else
	{
		InsertContent=%InsertContent%%IP%`t%A_LoopField%`r`n
	}
}
ToolTip
Gosub InsertContent
Return

Host2IP(name){

ErrorLevel = 0
type := SubStr(name, 1, 1)
if type is alpha
   {
		VarSetCapacity(WSADATA, 12+257+129, 0)   ; WSADATA structure initialization
err := DllCall("wsock32\WSAStartup", Short, 0x101, UInt, &WSADATA, UInt)

   hostent := DllCall("ws2_32\gethostbyname", UInt, &name, UInt) ; http://msdn.microsoft.com/en-us/library/ms738524(VS.85).aspx
   if !hostent
      {
      err := DllCall("ws2_32\WSAGetLastError")
      ErrorLevel = 1
      return err
      }
   ; string containing protocol types (mainly for debug purposes)
   str := "local to host (pipes, portals)|internetwork: UDP, TCP, etc.|arpanet imp addresses|pup protocols: e.g. BSP|mit CHAOS protocols|XEROX NS protocols or IPX protocols: IPX, SPX, etc.|ISO protocols or OSI is ISO|european computer manufacturers|datakit protocols|CCITT protocols, X.25 etc|IBM SNA|DECnet|Direct data link interface|LAT|NSC Hyperchannel|AppleTalk|NetBios-style addresses|VoiceView|Protocols from Firefox|Unknown - Somebody is using this!|Banyan|Native ATM Services|Internetwork Version 6|Microsoft Wolfpack|IEEE 1284.4 WG AF"
   ptrName := NumGet(hostent+0, 0, "UInt")
   pt := NumGet(hostent+0, 8, "UShort")
   Loop, Parse, str, |
      if (A_Index = pt)
         type := A_LoopField
   len := NumGet(hostent+0, 10, "UShort")
   ptrAddress := NumGet(hostent+0, 12, "UInt")
   ptrIPAddress := NumGet(ptrAddress+0, 0, "UInt")
   strAddress := NumGet(ptrIPAddress+0, 0, "UInt")
   VarSetCapacity(adr, 16, 32)
   DllCall("lstrcpy", UInt, &adr, UInt, DllCall("ws2_32\inet_ntoa", UInt, strAddress))
   VarSetCapacity(adr, -1)
   VarSetCapacity(pname, 260, 32)
   DllCall("lstrcpy", UInt, &pname, UInt, ptrName)
   VarSetCapacity(pname, -1)
   DllCall("wsock32\WSACleanup")
   return adr
   }
else
{
	ErrorLevel = 1
   return name
   }
}


GetErrorHost2IP(code) {
str := "Success|Reply buffer too small|Destination network unreachable|Destination host unreachable|Destination protocol unreachable|Destination port unreachable|Insufficient IP resources|Bad IP option specified|Hardware error|Packet too big|Request timed out|Bad request|Bad route|TTL expired in transit|TTL expired during fragment reassembly|Parameter problem|Datagrams are arriving too fast to be processed and datagrams may have been discarded|IP option too big|Bad destination|General failure (possible malformed ICMP packets)"
Loop, Parse, str, |
   {
   if (code = 11000 + A_Index - 1) || (A_Index = 20 && code = 11050)
      return err := code " [" A_LoopField "]"
   }
return err := code
}

PrepareEgg:
EggText=http://pandazone.net/viewthread.php?tid=11759`t【CLANNAD】IM － Ana/軼事（中英）`n`nThe place changes and goes. Like a wind, like clouds.`t這片土地瞬息萬變 像清風 像白雲`nLike the traces of the heart, no halt at the places.`t像心之軌跡 沒有一刻停息`n`nThe place is so far away, be far apart.`t這片土地是如此遙遠 遙遠`nPeople`'s hand does not reach. so merely has (the) worship.`t人們無法觸及 因此沒有崇敬之情`n`nThe place is a lofty lord. Can`'t meet nobody put on.`t這片土地仿佛是心頭重負 無人能夠承受`nWe will lose the place. So lofty which changes.`t我們將失去這個地方 它是如此高不可攀`n`nNot all were desired. However, we`'re never sad.`t雖然不盡如人意 但我們並不憂傷`nStill, there is still the place. far away. far away.`t這片土地依舊存在 遙不可及`n`n(The wind) blows through the place. an endless, with all.`t風兒路過此地撒下萬種風情`nLike the ripple float on the water. It blows at as it goes.`t宛如水面上的波紋 多少漣漪在蕩漾`n`nThe place is no make at all. Nothing is shown.`t此地渾然天成 看不見任何事物`nLike the sand clasped by hand. It falls vainly.`t仿佛手裏緊握的沙子 轉眼便從指間滑過`n`nThe place is (a) profound lord, and wear the vain faint light.`t這片土地是如此幽深 被一道虛幻的微光所圍`nBut we will find it in the place. The heart at which it stands still.`t但我們一定要找到 那間佇立於此的小屋`n`nIf not concerned with all, It will maintain that no die.`t倘若漠不關心 它將依然沒有色彩`nTherefore there is still the heart. It`'s lonely, solitary.`t有這樣一間小屋 孤獨的立在那裏`n`nNo halt at the wind. it soars to the sky.`t順風而行 在空中飄揚`nLike the verdure (which) meets with sunrise, It grows up as reborn.`t就像綠芽沐浴在陽光中 茁壯成長`n`nThe heart has held new one. that`'s different from all.`t小屋來了新客人 有些與眾不同`nLike the sand castle of the children, but realized with the mind.`t就像孩子的沙堡 但心中可以明白`n`nThe person is a vain statue. wear taciturnity calm.`t他是一座虛無的雕像 沉沒無語`nStill, We will know a huge flow. It is stopped by nobody.`t我們知道洪潮即將來臨 無人能擋`n`nSoon, the wind wears the snow cloud. will be died to snow-white.`t很快 風披上了雪的外衣 被染成了銀白`nSummer grass will incline, No sunlight, feebly shade.`t夏草將臥躺 沒有日光 柔弱地陰涼處`n`nThe place buried in deep snow. like the collapsing castle.`t這片土地被深埋在積雪中 像那坍塌的城堡`nLike the head of the shade, figure will be thrown away.`t像那陰影的一角 形象盡不拋棄`n`nThe heart buried in deep snow. It sinks in to the flood.`t小屋被厚厚的雪覆蓋 深陷其中`nAnd the `"not dying`" is died out, and waits for a oppose one.`t全身被染上色彩 等待對手的到來`n`nEven if all are healed, be gone no return.`t縱使萬物恢復原貌 也是一去不復返`nThere is still the place. far way. far away.`t這片土地依舊存在 遙不可及`n`nThe place changes and goes. Like a wind, like clouds.`t此地瞬息萬變 像清風 像白雲`nLike the traces of the heart, no halt at the places. `t像心之軌跡 沒有一刻停息`n`nThe place is a lofty lord. can`'t meet nobody put on.`t此地仿佛是心頭重負 無人能夠承受`nStill, there is still the place. far away. far away.`t這片土地依舊存在 遙不可及…
StringSplit, Egg, EggText, `n
EggText=
Return

^#!+Z::
if EggDone = true
{
	Menu, IAMEgg, Show
	return
}
Gosub PrepareEgg
Egg=0
Loop, %Egg0%
{
	Egg += 1
	Egggg:=Egg%Egg%
	Egg%Egg%=
	EggDone = true
	Menu, IAMEgg, Add, %Egggg%, None
}
Menu, IAMEgg, Show
Return

None:
Return

InsertLocalhost:
InsertContent=`r`n127.0.0.1 localhost`r`n127.0.0.1 localhost.localdomain`r`n::1 localhost`r`n::1 localhost.localdomain`r`n
Gosub InsertContent
Return

FirstRun:
IfExist,%SystemHosts%
{
	FileRead, BackupContents, %SystemHosts%
	FormatTime, TimeStamp, , yyMMdd_HHmm
	BackupName = %TimeStamp%auto_%SystemHosts%
	StringReplace, BackupName, BackupName, \, _, All
	StringReplace, BackupName, BackupName, /, _, All
	StringReplace, BackupName, BackupName, :, _, All
	StringReplace, BackupName, BackupName, *, _, All
	StringReplace, BackupName, BackupName, ?, _, All
	StringReplace, BackupName, BackupName, `", _, All
	StringReplace, BackupName, BackupName, ``, _, All
	StringReplace, BackupName, BackupName, <, _, All
	StringReplace, BackupName, BackupName, >, _, All
	StringReplace, BackupName, BackupName, |, _, All
	StringReplace, BackupName, BackupName, ., _, All
	Gosub CreateBackup
}
Return

SpecialHostsTHUNDERAD()
{
	dateStart = %A_Now%
	dateEnd = %dateStart%
	dateEnd += 30, days
	FormatTime, dateStartFormat, %dateStart%, LongDate
	FormatTime, dateEndFormat, %dateEnd%, LongDate
	dateNow = %dateStart%
	data=
	Loop, 31
	{
		FormatTime, dateNowFormat, %dateNow%, yyyyMMdd
		data = %data%0.0.0.0`t%dateNowFormat%.biz5.sandai.net`r`n
		dateNow += 1, days
	}
	result = 
(
;
;提示：由于迅雷使用了神奇的泛域名广告，导致每天的广告域名都不一样，
;　　　因此您在 HostsX 中添加的此数据仅能从本次添加日期 %dateStartFormat% 起，
;　　　至 %dateEndFormat% 生效 31 天。
;
%data%
)
	return result
}


LogStatus(Message, Log2=1) {
    global StatusLog
    
    FormatTime, TimeStamp, , yyyy-MM-dd HH:mm:ss
    Log := "[" TimeStamp "] " Message
    
    SB_SetText(Log, 2, 1)
    
    If(Log2 == "1")
    {
        StatusLog.Insert(Log)
        if ((StatusLog.MaxIndex() - StatusLog.MinIndex()) > 99)
        {
            StatusLog.Remove(StatusLog.MinIndex())
        }
    }
}

MainStatus:
if (A_GuiEvent == "Normal")
{
    if (A_EventInfo == 2)
    {
        Menu, StatusLog, Add
        Menu, StatusLog, DeleteAll
        for index, element in StatusLog
        {
            	Menu, StatusLog, Add, %element%, CopyMenu
        }
        Menu, StatusLog, Add, 
        Menu, StatusLog, Add, 复制全部日志(&C), CopyAllStatusLog
        Menu, StatusLog, Show
        Menu, StatusLog, DeleteAll
    }
}
return

CopyAllStatusLog:
ClipboardStatusLog=
for index, element in StatusLog
{
	ClipboardStatusLog=%ClipboardStatusLog%%element%`n
}
Clipboard:=ClipboardStatusLog
ClipboardStatusLog=
return

CopyMenu:
Clipboard:= A_ThisMenuItem
return

SetGUIFont(id)
{
    gui, %id%:font,, MS sans serif
    gui, %id%:font,, Arial
    gui, %id%:font,, Verdana
    gui, %id%:font,, Tahoma
    gui, %id%:font,, Segoe UI
    gui, %id%:font,, VL Gothic
}

UpdateStatusBar(wParam, lParam)
{
    global ControlID
    IfWinActive ahk_id %ControlID%
    {
        ControlGet, MainEditCurrentLine, CurrentLine,, edit1, A
        ControlGet, MainEditCurrentCol, CurrentCol,, edit1, A
        SB_SetText("Ln " MainEditCurrentLine ", Col " MainEditCurrentCol, 1)
    }
}

HTTPRequestProgress( pct, total ) {
If ( pct = "" )
	Progress, OFF
Else If ( pct < 0 )
	Progress, % Round( 100 * ( pct + 1 ), 1 ), % Round( ( pct + 1 ) * total, 0 ) " of " total " bytes.", 正在发送数据
Else If ( 0 <= pct )
    Progress, % Round( 100 * ( pct ), 1 ), % Round( ( pct ) * total, 0 ) " of " total " bytes.", 正在接收数据
}

WCom(URL) {
ComObjError(false),W := ComObjCreate("WinHttp.WinHttpRequest.5.1"),W.Open("GET", URL), W.Send()
Return W.ResponseText,W.quit
}


HTTPRequestDownloadToFile(status, url, fname) {
    global HTTPRequestStatusBarPrefix
    HTTPRequestStatusBarPrefix := status
    
    ifExist, fname
        FileDelete, fname

    HTTPRequest( url, "", b, "Charset: utf-8`nBinary`nCallback: HTTPRequestStatusBarProgress`nSaveAs: " fname)
    aErrorLevel := ErrorLevel
    SB_SetProgress(0, 1, "+Smooth Hide")
    ErrorLevel := aErrorLevel
}

HTTPRequestStatusBarProgress( pct, total ) {
    global HTTPRequestStatusBarPrefix
    If ( pct = "" )
    {
    	SB_SetProgress(0, 1, "+Smooth Hide")
    }
    Else If ( pct < 0 )
    {
        LogStatus(HTTPRequestStatusBarPrefix "正在发送数据：" Round( ( pct ) * total, 0 ) " / " total " 字节", False)
    	SB_SetProgress(Round( 100 * ( pct + 1 ), 1 ), 1, "+Smooth Show")
    }
    Else If ( 0 <= pct )
    {
        LogStatus(HTTPRequestStatusBarPrefix "正在接收数据：" Round( ( pct ) * total, 0 ) " / " total " 字节", False)
        SB_SetProgress(Round( 100 * ( pct ), 1 ), 1, "+Smooth Show")
    }
    return -1
}


; http://www.autohotkey.com/board/topic/43335-email-validity-check-isvalidemail-function/
isValidEmail(emailstr) 
{ 
  ; Get length 
  emailstr_len := StrLen(emailstr)
  ; Remove whitespace (AutoTrim) 
  emailstr = %emailstr% 
  ; Make lowercase 
  StringLower, emailstr, emailstr 
  ; Split it up into before and after the @ symbol 
  StringGetPos, atPos, emailstr, @, R 
  If ErrorLevel 
    Return false ; no @ 
  StringLeft, local_part, emailstr, %atPos% 
  StringRight, domain_part, emailstr, % emailstr_len - atPos - 1 
  ; Sanitize quoted parts  
  local_part := RegExReplace(local_part, "\\\.", "_") 
  local_part := RegExReplace(local_part, """[^""]+""", ".") 
  ; Comments ( this is a comment ) are permitted in domain parts 
  domain_part := RegExReplace(domain_part, "\([^()]*\)", "") 
  ; Make sure there are no more @ (we sanitized valid ones above) 
  If InStr(local_part, "@") 
    Return false ; too many @ 
  ; Check that the username is >= 1 char 
  If StrLen(local_part) = 0 
    Return false ; username missing 
  ; Split the domain part into the dotted parts 
  StringSplit, domain_components, domain_part, `. 
  ; Check there are at least 2 
  If domain_components0 < 2 
    Return false ; not enough domain components
  ; Check each domain part to ensure it doesn't start or end with a bad char 
  Loop %domain_components0% 
  { 
    domain_component := domain_components%A_Index% 
    If (StrLen(domain_component) > 0) 
    { 
      StringLeft, firstChar, domain_component, 1 
      StringRight, lastChar, domain_component, 1 
      If RegExMatch(firstChar, "[\.-]") Or RegExMatch(lastChar, "[\.-]") 
        Return false ; wrong start/end character in domain component
    } 
    Else 
      Return false ; domain component missing 
  } 
  ; Check the last domain component has 2-6 chars (.uk to .museum) 
  domain_last := domain_components%domain_components0% 
  If (StrLen(domain_last) < 2) Or If (StrLen(domain_last) > 6) 
    Return false ; TLD too large or small
  ; Check for valid chars - Domains can only have A-Z, 0-9, ., and the - chars, 
  ; or be in the form [123.123.123.123]
  If RegExMatch(domain_part, "^\[(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\]$") 
  { 
    If ip2long(domain_part) != 0 
      Return true ; ip 
    Else 
      Return false ; ip error 
  } 
  If RegExMatch(domain_part, "^[a-z0-9\.-]+$") 
    Return true ; domain
  ; If we get here then it didn't pass 
  Return false ; end of function
} 

ip2long(ip) 
{  ; http://www.cflib.org/udf/ip2long 
  ip := RegExReplace(ip, "\[|\]", "") ; remove xtra chars 
  StringSplit, iparr, ip, `. 
  If (iparr0 != 4) 
    Return False 
  If (iparr1 > 255 Or iparr2 > 255 Or iparr3 > 255 Or iparr4 > 255) 
    Return False 
  Else 
    Return (iparr1*256^3) + (iparr2*256^2) + (iparr3*256) + iparr4 
}


URLEncode(str, encoding="UTF-8", except="!#$&'()*+,-./:;=?@_~") {
		len := StrLen(str)
		result := ""
		i := 1
		oldFmt := A_FormatInteger
		SetFormat, Integer, hex
		While (i <= len) {
				char := SubStr(str, i, 1) ; 한문자씩 파싱
				result .= IsNonEncodedCharacter(char, except) ? char : ToPercentHexFormat(char, encoding)
				i++
		}
		SetFormat, Integer, %oldFmt%
		return result
}

IsNonEncodedCharacter(char, except) {
		ascii := Asc(char)
		return ascii >= 0x41 && ascii <= 0x5A ; A-Z
						|| ascii >= 0x61 && ascii <= 0x7A ; a-z
						|| ascii >= 0x30 && ascii <= 0x39 ; 0-9
						|| InStr(except, char, true)
}
ToPercentHexFormat(str, encoding) {
		byteCnts := StrPutVar(str, encoded, encoding) - 1
		result := ""
		i := 0
		While (i < byteCnts) {
				byte := NumGet(encoded, i, "UChar")
				hex := StrUpper(SubStr(byte, 3)) ; "0x" 제거
				If (StrLen(hex) == 1)
						hex := "0" . hex
				result .= "%" . hex
				i++
		}
		return result
}

StrUpper(str) {
		StringUpper, out, str
		return out
}

StrPutVar(str, ByRef var, encoding) {
		VarSetCapacity(var, StrPut(str, encoding) * ((encoding == "utf-16" || encoding == "cp1200") ? 2 : 1))
		return StrPut(str, &var, encoding)
}

; SB_SetProgress
; (w) by DerRaphael / Released under the Terms of EUPL 1.0 
; see http://ec.europa.eu/idabc/en/document/7330 for details

SB_SetProgress(Value=0,Seg=1,Ops="")
{
   ; Definition of Constants   
   Static SB_GETRECT      := 0x40a      ; (WM_USER:=0x400) + 10
        , SB_GETPARTS     := 0x406
        , SB_PROGRESS                   ; Container for all used hwndBar:Seg:hProgress
        , PBM_SETPOS      := 0x402      ; (WM_USER:=0x400) + 2
        , PBM_SETRANGE32  := 0x406
        , PBM_SETBARCOLOR := 0x409
        , PBM_SETBKCOLOR  := 0x2001 
        , dwStyle         := 0x50000001 ; forced dwStyle WS_CHILD|WS_VISIBLE|PBS_SMOOTH

   ; Find the hWnd of the currentGui's StatusbarControl
   Gui,+LastFound
   ControlGet,hwndBar,hWnd,,msctls_statusbar321

   if (!StrLen(hwndBar)) { 
      rErrorLevel := "FAIL: No StatusBar Control"     ; Drop ErrorLevel on Error
   } else If (Seg<=0) {
      rErrorLevel := "FAIL: Wrong Segment Parameter"  ; Drop ErrorLevel on Error
   } else if (Seg>0) {
      ; Segment count
      SendMessage, SB_GETPARTS, 0, 0,, ahk_id %hwndBar%
      SB_Parts :=  ErrorLevel - 1
      If ((SB_Parts!=0) && (SB_Parts<Seg)) {
         rErrorLevel := "FAIL: Wrong Segment Count"  ; Drop ErrorLevel on Error
      } else {
         ; Get Segment Dimensions in any case, so that the progress control
         ; can be readjusted in position if neccessary
         if (SB_Parts) {
            VarSetCapacity(RECT,16,0)     ; RECT = 4*4 Bytes / 4 Byte <=> Int
            ; Segment Size :: 0-base Index => 1. Element -> #0
            SendMessage,SB_GETRECT,Seg-1,&RECT,,ahk_id %hwndBar%
            If ErrorLevel
               Loop,4
                  n%A_index% := NumGet(RECT,(a_index-1)*4,"Int")
            else
               rErrorLevel := "FAIL: Segmentdimensions" ; Drop ErrorLevel on Error
         } else { ; We dont have any parts, so use the entire statusbar for our progress
            n1 := n2 := 0
            ControlGetPos,,,n3,n4,,ahk_id %hwndBar%
         } ; if SB_Parts

         If (InStr(SB_Progress,":" Seg ":")) {

            hWndProg := (RegExMatch(SB_Progress, hwndBar "\:" seg "\:(?P<hWnd>([^,]+|.+))",p)) ? phWnd :

         } else {

            If (RegExMatch(Ops,"i)-smooth"))
               dwStyle ^= 0x1

            hWndProg := DllCall("CreateWindowEx","uint",0,"str","msctls_progress32"
               ,"uint",0,"uint", dwStyle
               ,"int",0,"int",0,"int",0,"int",0 ; segment-progress :: X/Y/W/H
               ,"uint",DllCall("GetAncestor","uInt",hwndBar,"uInt",1) ; gui hwnd
               ,"uint",0,"uint",0,"uint",0)

            SB_Progress .= (StrLen(SB_Progress) ? "," : "") hwndBar ":" Seg ":" hWndProg

         } ; If InStr Prog <-> Seg

         ; HTML Colors
         Black:=0x000000,Green:=0x008000,Silver:=0xC0C0C0,Lime:=0x00FF00,Gray:=0x808080
         Olive:=0x808000,White:=0xFFFFFF,Yellow:=0xFFFF00,Maroon:=0x800000,Navy:=0x000080
         Red:=0xFF0000,Blue:=0x0000FF,Fuchsia:=0xFF00FF,Aqua:=0x00FFFF

         If (RegExMatch(ops,"i)\bBackground(?P<C>[a-z0-9]+)\b",bg)) {
              if ((strlen(bgC)=6)&&(RegExMatch(bgC,"i)([0-9a-f]{6})")))
                  bgC := "0x" bgC
              else if !(RegExMatch(bgC,"i)^0x([0-9a-f]{1,6})"))
                  bgC := %bgC%
              if (bgC+0!="")
                  SendMessage, PBM_SETBKCOLOR, 0
                      , ((bgC&255)<<16)+(((bgC>>8)&255)<<8)+(bgC>>16) ; BGR
                      ,, ahk_id %hwndProg%
         } ; If RegEx BGC
         If (RegExMatch(ops,"i)\bc(?P<C>[a-z0-9]+)\b",fg)) {
              if ((strlen(fgC)=6)&&(RegExMatch(fgC,"i)([0-9a-f]{6})")))
                  fgC := "0x" fgC
              else if !(RegExMatch(fgC,"i)^0x([0-9a-f]{1,6})"))
                  fgC := %fgC%
              if (fgC+0!="")
                  SendMessage, PBM_SETBARCOLOR, 0
                      , ((fgC&255)<<16)+(((fgC>>8)&255)<<8)+(fgC>>16) ; BGR
                      ,, ahk_id %hwndProg%
         } ; If RegEx FGC

         If ((RegExMatch(ops,"i)(?P<In>[^ ])?range((?P<Lo>\-?\d+)\-(?P<Hi>\-?\d+))?",r)) 
              && (rIn!="-") && (rHi>rLo)) {    ; Set new LowRange and HighRange
              SendMessage,0x406,rLo,rHi,,ahk_id %hWndProg%
         } else if ((rIn="-") || (rLo>rHi)) {  ; restore defaults on remove or invalid values
              SendMessage,0x406,0,100,,ahk_id %hWndProg%
         } ; If RegEx Range
      
         If (RegExMatch(ops,"i)\bEnable\b"))
            Control, Enable,,, ahk_id %hWndProg%
         If (RegExMatch(ops,"i)\bDisable\b"))
            Control, Disable,,, ahk_id %hWndProg%
         If (RegExMatch(ops,"i)\bHide\b"))
            Control, Hide,,, ahk_id %hWndProg%
         If (RegExMatch(ops,"i)\bShow\b"))
            Control, Show,,, ahk_id %hWndProg%

         ControlGetPos,xb,yb,,,,ahk_id %hwndBar%
         ControlMove,,xb+n1,yb+n2,n3-n1,n4-n2,ahk_id %hwndProg%
         SendMessage,PBM_SETPOS,value,0,,ahk_id %hWndProg%

      } ; if Seg greater than count
   } ; if Seg greater zero

   If (regExMatch(rErrorLevel,"^FAIL")) {
      ErrorLevel := rErrorLevel
      Return -1
   } else 
      Return hWndProg

}